python script for generating CPD tmaps 

need numpy installed and python bindings for vtk

rsync setup
=========
 tar -zxvf rsync-3.1.1.tar.gz
 cd rsync-3.1.1
 ./configure
 make

env setup
=========

bash
export PYTHONPATH=/usr/g/research/fuentes/EPD/epd-7.3-1-rh5-x86_64/lib/python2.7/site-packages
export LD_LIBRARY_PATH=/usr/g/research/fuentes/EPD/epd-7.3-1-rh5-x86_64/lib/:/usr/g/research/fuentes/EPD/epd-7.3-1-rh5-x86_64/lib/vtk-5.6
/usr/g/research/fuentes/EPD/epd-7.3-1-rh5-x86_64/bin/python

Usage 
=====

$ vglrun python cpd.py --datadir=/full/path/to/your/directory

$ vglrun python cpd.py
using vtk version 5.6.1
Usage: scrb3MR3T.py [options]

Options:
  -h, --help     show this help message and exit
  --datadir=DIR  full path to data directory
  --necho=INT    # of echos, will only use the first one
  --nstep=INT    # of expected time steps
  -q, --quiet    don't print status messages to stdout
{'datadir': None, 'necho': 1, 'nstep': 100, 'verbose': True}

Example Usage
==============
 /usr/g/research/fuentes/EPD/epd-7.3-1-rh5-x86_64/bin/python cpd.py  --datadir=/export/home1/sdc_image_pool/images/p27/e70/s760

 vglrun python /workarea/fuentes/FullRepo/DIP/codes/trunk/thermometry/algorithms/cpd/cpd.py --datadir=/FUS4/data2/BioTex/nsf_rfp-12-571/RWJ/archive08_26_10/08_26_10/s69296


Image Location
==============
 10.115.24.111:/export/home1/sdc_image_pool/images/



pydicom Install
===============
wget http://pydicom.googlecode.com/files/pydicom-0.9.8.tar.gz

export PYTHONPATH=/usr/g/research/fuentes/cpd/pydicom-0.9.8-install/lib/python2.6/site-packages/:$PYTHONPATH
/usr/g/research/fuentes/EPD/epd-7.3-1-rh5-x86_64/bin/python setup.py install --prefix=/usr/g/research/fuentes/EPD/epd-7.3-1-rh5-x86_64




SQL commands
============
select * from tagcache where  tag like '(0020, 000e)' ;
select * from tagcache where  tag like '(0020, 0100)' ;
select * from tagcache where  tag like '(0019, 10a2)' ;
select * from tagcache where  tag like '(0020, 0013)' ;
select * from tagcache where  tag like '(0018, 1314)' ;

select  tg1.Value, tg3.Value,count(tg2.Value), group_concat(tg2.Value) ,count(tg4.Value ), group_concat(tg4.Value) ,tg5.Value , group_concat(tg6.Value),count(tg7.Value ), tg7.Value , tg8.Value, tg9.Value
from TagCache tg1 
join TagCache tg2 on tg1.sopinstanceuid=tg2.sopinstanceuid
join TagCache tg3 on tg1.sopinstanceuid=tg3.sopinstanceuid
join TagCache tg4 on tg1.sopinstanceuid=tg4.sopinstanceuid
join TagCache tg5 on tg1.sopinstanceuid=tg5.sopinstanceuid
join TagCache tg6 on tg1.sopinstanceuid=tg6.sopinstanceuid
join TagCache tg7 on tg1.sopinstanceuid=tg7.sopinstanceuid
join TagCache tg8 on tg1.sopinstanceuid=tg8.sopinstanceuid
join TagCache tg9 on tg1.sopinstanceuid=tg9.sopinstanceuid
where tg1.tag like '(0020, 000E)'
and   tg1.value='1.2.840.113619.2.353.4120.7587709.18419.1427112903.726'
and   tg2.tag    = '(0020, 0100)' -- TemporalPositionIdentifier 
and   tg3.tag    = '(0019, 10a2)' -- data number
and   tg4.tag    = '(0020, 0013)' -- instance number
and   tg5.tag    = '(0018, 1314)' -- flip angle 
and   tg6.tag    = '(0018, 0086)' -- echo number 
and   tg7.tag    = '(0020, 1041)' -- slice location
and   tg8.tag    = '(0019, 1019)' -- slice origin
and   tg9.tag    = '(0021, 104f)' -- nslice
group by tg3.value
order by cast(tg3.value as numeric);



select  tg1.Value,tg2.Name,  tg2.Value
from TagCache tg1 
join TagCache tg2 on tg1.sopinstanceuid=tg2.sopinstanceuid
where tg1.tag like '(0020, 000E)'
and   tg1.value='1.2.840.113619.2.353.4120.7587709.18419.1427112903.726'
and   tg2.name like '%slice%';





vtk python Install (not used. used EPD instead)
===============
/usr/g/research/fuentes/cpd/cmake-3.0.2-Linux-i386/bin/ccmake

mkdir -p vtk-5.8-build; cd vtk-5.8-build;/usr/g/research/fuentes/cpd/cmake-3.0.2-Linux-i386/bin/cmake -DVTK_USE_TK=OFF -DBUILD_SHARED_LIBS=ON  -DCMAKE_BUILD_TYPE=RelWithDebInfo -DBUILD_EXAMPLES=OFF -DBUILD_TESTING=OFF -DCMAKE_VERBOSE_MAKEFILE=ON -DVTK_WRAP_PYTHON=ON -DVTK_USE_PARALLEL=ON -DVTK_USE_N_WAY_ARRAYS=ON -DCMAKE_INSTALL_PREFIX=/usr/g/research/fuentes/cpd/vtk-5.8-install ../VTK;make -j 6;make install

vtk c++ only Install  (not used. used EPD instead)
===============
mkdir -p vtk-5.8-build; cd vtk-5.8-build;/usr/g/research/fuentes/cpd/cmake-3.0.2-Linux-i386/bin/cmake -DVTK_USE_TK=OFF -DBUILD_SHARED_LIBS=ON  -DCMAKE_BUILD_TYPE=RelWithDebInfo -DBUILD_EXAMPLES=OFF -DBUILD_TESTING=OFF -DCMAKE_VERBOSE_MAKEFILE=ON -DVTK_USE_PARALLEL=ON -DVTK_USE_N_WAY_ARRAYS=ON -DCMAKE_INSTALL_PREFIX=/usr/g/research/fuentes/cpd/vtk-5.8-install ../VTK;make -j 6;make install

